Question 1: Read and Write with Exception Handling:

Write a program that reads from a file named input.txt and writes its content to a file named output.txt. Use exception handling to manage the cases where the file input.txt does not exist. Define a global variable file_content to store the content read from the file.
Question 2: Word Count with Global and Local Variables:

Write a function that counts the number of words in a file named story.txt and updates a global variable total_words. Use exception handling to manage any errors that occur during file operations (e.g., file not found). Define a local variable within the function to count the words.





file_content = ""

def read_file():
    global file_content
    try:
        with open("input.txt", "r") as file:
            file_content = file.read()
    except FileNotFoundError:
        print("The file 'input.txt' does not exist.")
    except Exception as e:
        print(f"An error occurred: {e}")

def write_file():
    global file_content
    try:
        with open("output.txt", "w") as file:
            file.write(file_content)
    except Exception as e:
        print(f"An error occurred while writing to 'output.txt': {e}")

# Read from input.txt and write to output.txt
read_file()
write_file()
print("Content written to 'output.txt'.")






total_words = 0

def count_words_in_file():
    global total_words
    try:
        with open("story.txt", "r") as file:
            lines = file.readlines()
            local_word_count = 0
            for line in lines:
                words = line.split()
                local_word_count += len(words)
            total_words = local_word_count
    except FileNotFoundError:
        print("The file 'story.txt' does not exist.")
    except Exception as e:
        print(f"An error occurred: {e}")

# Count the number of words in story.txt
count_words_in_file()
print(f"Total number of words in 'story.txt': {total_words}")
